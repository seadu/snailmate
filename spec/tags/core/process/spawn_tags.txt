slow:Process.spawn returns immediately
slow:Process.spawn sets environment variables in the child environment
slow:Process.spawn unsets environment variables whose value is nil
slow:Process.spawn calls #to_hash to convert the environment
slow:Process.spawn calls #to_str to convert the environment keys
slow:Process.spawn calls #to_str to convert the environment values
slow:Process.spawn raises an ArgumentError if an environment key includes an equals sign
slow:Process.spawn raises an ArgumentError if an environment key includes a null byte
slow:Process.spawn raises an ArgumentError if an environment value includes a null byte
slow:Process.spawn unsets other environment variables when given a true :unsetenv_others option
slow:Process.spawn does not unset other environment variables when given a false :unsetenv_others option
slow:Process.spawn does not unset environment variables included in the environment hash
slow:Process.spawn joins the current process group by default
slow:Process.spawn joins the current process if pgroup: false
slow:Process.spawn joins the current process if pgroup: nil
slow:Process.spawn joins a new process group if pgroup: true
slow:Process.spawn joins a new process group if pgroup: 0
slow:Process.spawn joins the specified process group if pgroup: pgid
slow:Process.spawn uses the current working directory as its working directory
slow:Process.spawn uses the current umask by default
slow:Process.spawn sets the umask if given the :umask option
slow:Process.spawn redirects STDOUT to the given file if out: IO
slow:Process.spawn redirects STDOUT to the given file if out: String
slow:Process.spawn redirects STDOUT to the given file if out: [String name, String mode]
slow:Process.spawn redirects STDERR to the given file descriptor if err: IO
slow:Process.spawn redirects STDERR to the given file if err: String
slow:Process.spawn redirects STDERR to child STDOUT if :err => [:child, :out]
slow:Process.spawn redirects both STDERR and STDOUT to the given IO
slow:Process.spawn when passed :chdir changes to the directory passed for :chdir
slow:Process.spawn when passed :chdir calls #to_path to convert the :chdir value
slow:Process.spawn when passed close_others: true closes file descriptors >= 3 in the child process even if fds are set close_on_exec=false
slow:Process.spawn when passed close_others: true does not close STDIN
slow:Process.spawn when passed close_others: true does not close STDOUT
slow:Process.spawn when passed close_others: true does not close STDERR
slow:Process.spawn when passed close_others: false closes file descriptors >= 3 in the child process because they are set close_on_exec by default
slow:Process.spawn when passed close_others: false does not close file descriptors >= 3 in the child process if fds are set close_on_exec=false
slow:Process.spawn when passed close_others: false does not close STDIN
slow:Process.spawn when passed close_others: false does not close STDOUT
slow:Process.spawn when passed close_others: false does not close STDERR
slow:Process.spawn with Integer option keys maps the key to a file descriptor in the child that inherits the file descriptor from the parent specified by the value
slow:Process.spawn executes the given command
slow:Process.spawn raises an ArgumentError if given a negative :pgroup option
slow:Process.spawn raises a TypeError if given a symbol as :pgroup option
slow:Process.spawn raises an ArgumentError if passed no command arguments
slow:Process.spawn raises an ArgumentError if passed env or options but no command arguments
slow:Process.spawn raises an ArgumentError if passed env and options but no command arguments
slow:Process.spawn raises an Errno::ENOENT for an empty string
slow:Process.spawn raises an Errno::ENOENT if the command does not exist
slow:Process.spawn raises an Errno::EACCES when the file does not have execute permissions
slow:Process.spawn raises an ArgumentError when passed a string key in options
slow:Process.spawn raises an ArgumentError when passed an unknown option key
slow:Process.spawn with a single argument subjects the specified command to shell expansion
slow:Process.spawn with a single argument creates an argument array with shell parsing semantics for whitespace
slow:Process.spawn with a single argument calls #to_str to convert the argument to a String
slow:Process.spawn with a single argument raises an ArgumentError if the command includes a null byte
slow:Process.spawn with a single argument raises a TypeError if the argument does not respond to #to_str
slow:Process.spawn with multiple arguments does not subject the arguments to shell expansion
slow:Process.spawn with multiple arguments preserves whitespace in passed arguments
slow:Process.spawn with multiple arguments calls #to_str to convert the arguments to Strings
slow:Process.spawn with multiple arguments raises an ArgumentError if an argument includes a null byte
slow:Process.spawn with multiple arguments raises a TypeError if an argument does not respond to #to_str
slow:Process.spawn with a command array uses the first element as the command name and the second as the argv[0] value
slow:Process.spawn with a command array does not subject the arguments to shell expansion
slow:Process.spawn with a command array preserves whitespace in passed arguments
slow:Process.spawn with a command array calls #to_ary to convert the argument to an Array
slow:Process.spawn with a command array calls #to_str to convert the first element to a String
slow:Process.spawn with a command array calls #to_str to convert the second element to a String
slow:Process.spawn with a command array raises an ArgumentError if the Array does not have exactly two elements
slow:Process.spawn with a command array raises an ArgumentError if the Strings in the Array include a null byte
slow:Process.spawn with a command array raises a TypeError if an element in the Array does not respond to #to_str
slow:Process.spawn redirects both STDERR and STDOUT at the time to the given name
fails:Process.spawn sets the umask if given the :umask option
fails:Process.spawn raises an Errno::EACCES when the file does not have execute permissions
fails:Process.spawn raises an Errno::EACCES or Errno::EISDIR when passed a directory
fails(spurious failure):Process.spawn when passed close_others: false does not close file descriptors >= 3 in the child process if fds are set close_on_exec=false
fails(spurious failure):Process.spawn when passed close_others: false closes file descriptors >= 3 in the child process because they are set close_on_exec by default
fails(spurious failure):Process.spawn when passed close_others: true closes file descriptors >= 3 in the child process even if fds are set close_on_exec=false
slow:Process.spawn inside Dir.chdir does not create extra process without chdir
slow:Process.spawn inside Dir.chdir kills extra chdir processes
slow:Process.spawn redirects both STDERR and STDOUT to the given file descriptor
slow:Process.spawn defaults :close_others to false
slow:Process.spawn closes STDERR in the child if :err => :close
slow:Process.spawn returns the process ID of the new process as an Integer
slow:Process.spawn redirects non-default file descriptor to itself
slow:Process.spawn redirects default file descriptor to itself
